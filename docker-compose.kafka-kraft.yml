services:
  kafka-kraft:
    image: apache/kafka:latest
    container_name: kafka-kraft-broker
    hostname: kafka-kraft
    ports:
      - "9093:9093"
      - "9102:9102"
    environment:
      # KRaft (no Zookeeper) configuration
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka-kraft:29094'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'  # Must be unique; use any base64 string

      # Network listeners - using different ports to avoid conflicts
      KAFKA_LISTENERS: 'PLAINTEXT://kafka-kraft:29093,CONTROLLER://kafka-kraft:29094,PLAINTEXT_HOST://0.0.0.0:9093'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka-kraft:29093,PLAINTEXT_HOST://localhost:9093'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'

      # JVM and performance optimization for KRaft
      KAFKA_HEAP_OPTS: '-Xmx4G -Xms4G'
      KAFKA_JVM_PERFORMANCE_OPTS: >
        -server
        -XX:+UseG1GC
        -XX:MaxGCPauseMillis=20
        -XX:InitiatingHeapOccupancyPercent=35
        -XX:+ExplicitGCInvokesConcurrent
        -XX:MaxInlineLevel=15
        -Djava.awt.headless=true

      # Enhanced performance settings for KRaft
      KAFKA_NUM_NETWORK_THREADS: 12
      KAFKA_NUM_IO_THREADS: 16
      KAFKA_SOCKET_SEND_BUFFER_BYTES: 131072
      KAFKA_SOCKET_RECEIVE_BUFFER_BYTES: 131072
      KAFKA_SOCKET_REQUEST_MAX_BYTES: 134217728
      KAFKA_BATCH_SIZE: 65536
      KAFKA_LINGER_MS: 5
      KAFKA_COMPRESSION_TYPE: lz4
      KAFKA_NUM_PARTITIONS: 8
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      
      # Log and retention settings optimized for performance testing
      KAFKA_LOG_RETENTION_HOURS: 24
      KAFKA_LOG_SEGMENT_BYTES: 536870912  # 512MB segments
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 300000
      KAFKA_LOG_CLEANUP_POLICY: 'delete'
      KAFKA_LOG_FLUSH_INTERVAL_MESSAGES: 10000
      KAFKA_LOG_FLUSH_INTERVAL_MS: 1000

      # Producer/Consumer optimization
      KAFKA_REPLICA_FETCH_MAX_BYTES: 1048576
      KAFKA_MESSAGE_MAX_BYTES: 1048576
      KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES: 10485760
      
      # KRaft specific optimizations
      KAFKA_CONTROLLER_SNAPSHOT_MAX_NEW_RECORD_BYTES: 20971520
      KAFKA_METADATA_LOG_SEGMENT_BYTES: 1073741824
      KAFKA_METADATA_LOG_MAX_RECORD_BYTES_BETWEEN_SNAPSHOTS: 2097152

      # JMX monitoring
      KAFKA_JMX_PORT: 9102
      KAFKA_JMX_HOSTNAME: localhost

    volumes:
      - kafka-kraft-data:/var/lib/kafka/data
      - kafka-kraft-logs:/var/lib/kafka/logs

    healthcheck:
      test: ["CMD-SHELL","bash -c 'echo > /dev/tcp/localhost/9092'"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 90s

    # Resource limits for consistent performance testing
    mem_limit: 8G
    mem_reservation: 6G
    cpus: 6
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    networks:
      - kafka-kraft-network

  kafka-kraft-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-kraft-ui
    depends_on:
      kafka-kraft:
        condition: service_healthy
    ports:
      - "8081:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: kraft-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-kraft:29093
      DYNAMIC_CONFIG_ENABLED: 'true'
    networks:
      - kafka-kraft-network
    restart: unless-stopped

volumes:
  kafka-kraft-data:
  kafka-kraft-logs:

networks:
  kafka-kraft-network:
    driver: bridge
