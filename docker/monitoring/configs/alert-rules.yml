groups:
  - name: kafka-performance-alerts
    rules:
      # Kafka Broker Alerts
      - alert: KafkaBrokerDown
        expr: up{job="kafka-brokers"} == 0
        for: 30s
        labels:
          severity: critical
          service: kafka
        annotations:
          summary: "Kafka broker is down"
          description: "Kafka broker {{ $labels.instance }} has been down for more than 30 seconds"

      - alert: KafkaHighCPUUsage
        expr: rate(process_cpu_seconds_total{job="kafka-brokers"}[5m]) * 100 > 80
        for: 2m
        labels:
          severity: warning
          service: kafka
        annotations:
          summary: "Kafka broker high CPU usage"
          description: "Kafka broker {{ $labels.instance }} CPU usage is {{ $value }}% for more than 2 minutes"

      - alert: KafkaHighMemoryUsage
        expr: (kafka_server_BrokerTopicMetrics_BytesInPerSec / 1024 / 1024) > 1000
        for: 5m
        labels:
          severity: warning
          service: kafka
        annotations:
          summary: "Kafka broker high memory usage"
          description: "Kafka broker {{ $labels.instance }} memory usage is high"

      - alert: KafkaHighDiskUsage
        expr: (node_filesystem_size_bytes{mountpoint="/"} - node_filesystem_free_bytes{mountpoint="/"}) / node_filesystem_size_bytes{mountpoint="/"} * 100 > 85
        for: 5m
        labels:
          severity: warning
          service: kafka
        annotations:
          summary: "Kafka broker high disk usage"
          description: "Kafka broker disk usage is {{ $value }}%"

      - alert: KafkaConsumerLag
        expr: kafka_consumer_lag_sum > 10000
        for: 2m
        labels:
          severity: warning
          service: kafka
        annotations:
          summary: "High consumer lag detected"
          description: "Consumer group {{ $labels.group }} has lag of {{ $value }} messages"

      - alert: KafkaLowThroughput
        expr: rate(kafka_server_BrokerTopicMetrics_MessagesInPerSec[5m]) < 100
        for: 5m
        labels:
          severity: warning
          service: kafka
        annotations:
          summary: "Kafka low throughput"
          description: "Kafka throughput is {{ $value }} messages/sec, below expected threshold"

  - name: redpanda-performance-alerts
    rules:
      # Redpanda Broker Alerts
      - alert: RedpandaBrokerDown
        expr: up{job="redpanda"} == 0
        for: 30s
        labels:
          severity: critical
          service: redpanda
        annotations:
          summary: "Redpanda broker is down"
          description: "Redpanda broker {{ $labels.instance }} has been down for more than 30 seconds"

      - alert: RedpandaHighCPUUsage
        expr: rate(redpanda_cpu_busy_seconds_total[5m]) * 100 > 80
        for: 2m
        labels:
          severity: warning
          service: redpanda
        annotations:
          summary: "Redpanda broker high CPU usage"
          description: "Redpanda broker {{ $labels.instance }} CPU usage is {{ $value }}% for more than 2 minutes"

      - alert: RedpandaHighMemoryUsage
        expr: redpanda_memory_allocated_memory / redpanda_memory_total_memory * 100 > 85
        for: 5m
        labels:
          severity: warning
          service: redpanda
        annotations:
          summary: "Redpanda broker high memory usage"
          description: "Redpanda broker {{ $labels.instance }} memory usage is {{ $value }}%"

      - alert: RedpandaLowThroughput
        expr: rate(redpanda_kafka_request_bytes_total[5m]) < 1000000
        for: 5m
        labels:
          severity: warning
          service: redpanda
        annotations:
          summary: "Redpanda low throughput"
          description: "Redpanda throughput is {{ $value }} bytes/sec, below expected threshold"

      - alert: RedpandaHighLatency
        expr: histogram_quantile(0.99, rate(redpanda_kafka_request_latency_seconds_bucket[5m])) > 0.1
        for: 2m
        labels:
          severity: warning
          service: redpanda
        annotations:
          summary: "Redpanda high latency"
          description: "Redpanda 99th percentile latency is {{ $value }}s"

  - name: system-performance-alerts
    rules:
      # System Resource Alerts
      - alert: HighSystemCPUUsage
        expr: 100 - (avg by(instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 90
        for: 2m
        labels:
          severity: critical
          service: system
        annotations:
          summary: "High system CPU usage"
          description: "System CPU usage is {{ $value }}% on {{ $labels.instance }}"

      - alert: HighSystemMemoryUsage
        expr: (1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100 > 90
        for: 2m
        labels:
          severity: critical
          service: system
        annotations:
          summary: "High system memory usage"
          description: "System memory usage is {{ $value }}% on {{ $labels.instance }}"

      - alert: HighDiskIOWait
        expr: irate(node_cpu_seconds_total{mode="iowait"}[5m]) * 100 > 20
        for: 2m
        labels:
          severity: warning
          service: system
        annotations:
          summary: "High disk I/O wait"
          description: "Disk I/O wait is {{ $value }}% on {{ $labels.instance }}"

      - alert: NetworkSaturation
        expr: rate(node_network_receive_bytes_total[5m]) + rate(node_network_transmit_bytes_total[5m]) > 100000000
        for: 2m
        labels:
          severity: warning
          service: system
        annotations:
          summary: "Network interface saturation"
          description: "Network traffic is {{ $value }} bytes/sec on {{ $labels.instance }}"

  - name: performance-comparison-alerts
    rules:
      # Performance Comparison Alerts
      - alert: PerformanceDegradation
        expr: |
          (
            (rate(kafka_server_BrokerTopicMetrics_MessagesInPerSec[5m]) - 
             rate(kafka_server_BrokerTopicMetrics_MessagesInPerSec[5m] offset 1h)) /
            rate(kafka_server_BrokerTopicMetrics_MessagesInPerSec[5m] offset 1h)
          ) * 100 < -10
        for: 5m
        labels:
          severity: warning
          service: performance
        annotations:
          summary: "Performance degradation detected"
          description: "Performance has degraded by {{ $value }}% compared to 1 hour ago"

      - alert: LatencyIncrease
        expr: |
          (
            histogram_quantile(0.99, rate(kafka_network_RequestMetrics_TotalTimeMs_bucket[5m])) -
            histogram_quantile(0.99, rate(kafka_network_RequestMetrics_TotalTimeMs_bucket[5m] offset 1h))
          ) > 50
        for: 5m
        labels:
          severity: warning
          service: performance
        annotations:
          summary: "Latency increase detected"
          description: "99th percentile latency increased by {{ $value }}ms"

      - alert: TestFailure
        expr: up{job="test-clients"} == 0
        for: 1m
        labels:
          severity: critical
          service: testing
        annotations:
          summary: "Performance test client failure"
          description: "Test client {{ $labels.instance }} has failed"

  - name: container-alerts
    rules:
      # Container Health Alerts
      - alert: ContainerHighCPUUsage
        expr: rate(container_cpu_usage_seconds_total[5m]) * 100 > 80
        for: 2m
        labels:
          severity: warning
          service: container
        annotations:
          summary: "Container high CPU usage"
          description: "Container {{ $labels.name }} CPU usage is {{ $value }}%"

      - alert: ContainerHighMemoryUsage
        expr: container_memory_usage_bytes / container_spec_memory_limit_bytes * 100 > 90
        for: 2m
        labels:
          severity: warning
          service: container
        annotations:
          summary: "Container high memory usage"
          description: "Container {{ $labels.name }} memory usage is {{ $value }}%"

      - alert: ContainerRestart
        expr: increase(container_start_time_seconds[5m]) > 0
        for: 0s
        labels:
          severity: warning
          service: container
        annotations:
          summary: "Container restart detected"
          description: "Container {{ $labels.name }} has restarted"